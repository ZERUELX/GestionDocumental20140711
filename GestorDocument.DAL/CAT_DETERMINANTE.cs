//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace GestorDocument.DAL
{
    public partial class CAT_DETERMINANTE
    {
        #region Primitive Properties
    
        public virtual long IdDeterminante
        {
            get;
            set;
        }
    
        public virtual int CveDeterminante
        {
            get;
            set;
        }
    
        public virtual string Area
        {
            get;
            set;
        }
    
        public virtual string PrefijoFolio
        {
            get;
            set;
        }
    
        public virtual string DeterminanteName
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual long LastModifiedDate
        {
            get;
            set;
        }
    
        public virtual bool IsModified
        {
            get;
            set;
        }
    
        public virtual long IdTipoDeterminante
        {
            get { return _idTipoDeterminante; }
            set
            {
                if (_idTipoDeterminante != value)
                {
                    if (CAT_TIPO_DETERMINANTE != null && CAT_TIPO_DETERMINANTE.IdTipoDeterminante != value)
                    {
                        CAT_TIPO_DETERMINANTE = null;
                    }
                    _idTipoDeterminante = value;
                }
            }
        }
        private long _idTipoDeterminante;
    
        public virtual long ServerLastModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<REL_SIGNATARIO> REL_SIGNATARIO
        {
            get
            {
                if (_rEL_SIGNATARIO == null)
                {
                    var newCollection = new FixupCollection<REL_SIGNATARIO>();
                    newCollection.CollectionChanged += FixupREL_SIGNATARIO;
                    _rEL_SIGNATARIO = newCollection;
                }
                return _rEL_SIGNATARIO;
            }
            set
            {
                if (!ReferenceEquals(_rEL_SIGNATARIO, value))
                {
                    var previousValue = _rEL_SIGNATARIO as FixupCollection<REL_SIGNATARIO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupREL_SIGNATARIO;
                    }
                    _rEL_SIGNATARIO = value;
                    var newValue = value as FixupCollection<REL_SIGNATARIO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupREL_SIGNATARIO;
                    }
                }
            }
        }
        private ICollection<REL_SIGNATARIO> _rEL_SIGNATARIO;
    
        public virtual CAT_TIPO_DETERMINANTE CAT_TIPO_DETERMINANTE
        {
            get { return _cAT_TIPO_DETERMINANTE; }
            set
            {
                if (!ReferenceEquals(_cAT_TIPO_DETERMINANTE, value))
                {
                    var previousValue = _cAT_TIPO_DETERMINANTE;
                    _cAT_TIPO_DETERMINANTE = value;
                    FixupCAT_TIPO_DETERMINANTE(previousValue);
                }
            }
        }
        private CAT_TIPO_DETERMINANTE _cAT_TIPO_DETERMINANTE;
    
        public virtual ICollection<REL_SIGNATARIO_EXTERNO> REL_SIGNATARIO_EXTERNO
        {
            get
            {
                if (_rEL_SIGNATARIO_EXTERNO == null)
                {
                    var newCollection = new FixupCollection<REL_SIGNATARIO_EXTERNO>();
                    newCollection.CollectionChanged += FixupREL_SIGNATARIO_EXTERNO;
                    _rEL_SIGNATARIO_EXTERNO = newCollection;
                }
                return _rEL_SIGNATARIO_EXTERNO;
            }
            set
            {
                if (!ReferenceEquals(_rEL_SIGNATARIO_EXTERNO, value))
                {
                    var previousValue = _rEL_SIGNATARIO_EXTERNO as FixupCollection<REL_SIGNATARIO_EXTERNO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupREL_SIGNATARIO_EXTERNO;
                    }
                    _rEL_SIGNATARIO_EXTERNO = value;
                    var newValue = value as FixupCollection<REL_SIGNATARIO_EXTERNO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupREL_SIGNATARIO_EXTERNO;
                    }
                }
            }
        }
        private ICollection<REL_SIGNATARIO_EXTERNO> _rEL_SIGNATARIO_EXTERNO;

        #endregion
        #region Association Fixup
    
        private void FixupCAT_TIPO_DETERMINANTE(CAT_TIPO_DETERMINANTE previousValue)
        {
            if (previousValue != null && previousValue.CAT_DETERMINANTE.Contains(this))
            {
                previousValue.CAT_DETERMINANTE.Remove(this);
            }
    
            if (CAT_TIPO_DETERMINANTE != null)
            {
                if (!CAT_TIPO_DETERMINANTE.CAT_DETERMINANTE.Contains(this))
                {
                    CAT_TIPO_DETERMINANTE.CAT_DETERMINANTE.Add(this);
                }
                if (IdTipoDeterminante != CAT_TIPO_DETERMINANTE.IdTipoDeterminante)
                {
                    IdTipoDeterminante = CAT_TIPO_DETERMINANTE.IdTipoDeterminante;
                }
            }
        }
    
        private void FixupREL_SIGNATARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (REL_SIGNATARIO item in e.NewItems)
                {
                    item.CAT_DETERMINANTE = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REL_SIGNATARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CAT_DETERMINANTE, this))
                    {
                        item.CAT_DETERMINANTE = null;
                    }
                }
            }
        }
    
        private void FixupREL_SIGNATARIO_EXTERNO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (REL_SIGNATARIO_EXTERNO item in e.NewItems)
                {
                    item.CAT_DETERMINANTE = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REL_SIGNATARIO_EXTERNO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CAT_DETERMINANTE, this))
                    {
                        item.CAT_DETERMINANTE = null;
                    }
                }
            }
        }

        #endregion
    }
}
