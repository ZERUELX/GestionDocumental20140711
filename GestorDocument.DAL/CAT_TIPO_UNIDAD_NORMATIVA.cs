//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace GestorDocument.DAL
{
    public partial class CAT_TIPO_UNIDAD_NORMATIVA
    {
        #region Primitive Properties
    
        public virtual long IdTipoUnidadNormativa
        {
            get;
            set;
        }
    
        public virtual string TipoUnidadNormativaName
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual long LastModifiedDate
        {
            get;
            set;
        }
    
        public virtual bool IsModified
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> ServerLastModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<CAT_ORGANIGRAMA> CAT_ORGANIGRAMA
        {
            get
            {
                if (_cAT_ORGANIGRAMA == null)
                {
                    var newCollection = new FixupCollection<CAT_ORGANIGRAMA>();
                    newCollection.CollectionChanged += FixupCAT_ORGANIGRAMA;
                    _cAT_ORGANIGRAMA = newCollection;
                }
                return _cAT_ORGANIGRAMA;
            }
            set
            {
                if (!ReferenceEquals(_cAT_ORGANIGRAMA, value))
                {
                    var previousValue = _cAT_ORGANIGRAMA as FixupCollection<CAT_ORGANIGRAMA>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCAT_ORGANIGRAMA;
                    }
                    _cAT_ORGANIGRAMA = value;
                    var newValue = value as FixupCollection<CAT_ORGANIGRAMA>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCAT_ORGANIGRAMA;
                    }
                }
            }
        }
        private ICollection<CAT_ORGANIGRAMA> _cAT_ORGANIGRAMA;

        #endregion
        #region Association Fixup
    
        private void FixupCAT_ORGANIGRAMA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CAT_ORGANIGRAMA item in e.NewItems)
                {
                    item.CAT_TIPO_UNIDAD_NORMATIVA = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CAT_ORGANIGRAMA item in e.OldItems)
                {
                    if (ReferenceEquals(item.CAT_TIPO_UNIDAD_NORMATIVA, this))
                    {
                        item.CAT_TIPO_UNIDAD_NORMATIVA = null;
                    }
                }
            }
        }

        #endregion
    }
}
