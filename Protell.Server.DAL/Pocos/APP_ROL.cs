//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Protell.Server.DAL.Pocos
{
    public partial class APP_ROL
    {
        #region Primitive Properties
    
        public virtual long IdRol
        {
            get;
            set;
        }
    
        public virtual string RolName
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsActive
        {
            get;
            set;
        }
    
        public virtual Nullable<long> LastModifiedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsModified
        {
            get;
            set;
        }
    
        public virtual Nullable<long> ServerLastModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<APP_ROL_MENU> APP_ROL_MENU
        {
            get
            {
                if (_aPP_ROL_MENU == null)
                {
                    var newCollection = new FixupCollection<APP_ROL_MENU>();
                    newCollection.CollectionChanged += FixupAPP_ROL_MENU;
                    _aPP_ROL_MENU = newCollection;
                }
                return _aPP_ROL_MENU;
            }
            set
            {
                if (!ReferenceEquals(_aPP_ROL_MENU, value))
                {
                    var previousValue = _aPP_ROL_MENU as FixupCollection<APP_ROL_MENU>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAPP_ROL_MENU;
                    }
                    _aPP_ROL_MENU = value;
                    var newValue = value as FixupCollection<APP_ROL_MENU>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAPP_ROL_MENU;
                    }
                }
            }
        }
        private ICollection<APP_ROL_MENU> _aPP_ROL_MENU;
    
        public virtual ICollection<APP_USUARIO_ROL> APP_USUARIO_ROL
        {
            get
            {
                if (_aPP_USUARIO_ROL == null)
                {
                    var newCollection = new FixupCollection<APP_USUARIO_ROL>();
                    newCollection.CollectionChanged += FixupAPP_USUARIO_ROL;
                    _aPP_USUARIO_ROL = newCollection;
                }
                return _aPP_USUARIO_ROL;
            }
            set
            {
                if (!ReferenceEquals(_aPP_USUARIO_ROL, value))
                {
                    var previousValue = _aPP_USUARIO_ROL as FixupCollection<APP_USUARIO_ROL>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAPP_USUARIO_ROL;
                    }
                    _aPP_USUARIO_ROL = value;
                    var newValue = value as FixupCollection<APP_USUARIO_ROL>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAPP_USUARIO_ROL;
                    }
                }
            }
        }
        private ICollection<APP_USUARIO_ROL> _aPP_USUARIO_ROL;
    
        public virtual ICollection<CAT_ORGANIGRAMA> CAT_ORGANIGRAMA
        {
            get
            {
                if (_cAT_ORGANIGRAMA == null)
                {
                    var newCollection = new FixupCollection<CAT_ORGANIGRAMA>();
                    newCollection.CollectionChanged += FixupCAT_ORGANIGRAMA;
                    _cAT_ORGANIGRAMA = newCollection;
                }
                return _cAT_ORGANIGRAMA;
            }
            set
            {
                if (!ReferenceEquals(_cAT_ORGANIGRAMA, value))
                {
                    var previousValue = _cAT_ORGANIGRAMA as FixupCollection<CAT_ORGANIGRAMA>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCAT_ORGANIGRAMA;
                    }
                    _cAT_ORGANIGRAMA = value;
                    var newValue = value as FixupCollection<CAT_ORGANIGRAMA>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCAT_ORGANIGRAMA;
                    }
                }
            }
        }
        private ICollection<CAT_ORGANIGRAMA> _cAT_ORGANIGRAMA;
    
        public virtual ICollection<GET_TURNO> GET_TURNO
        {
            get
            {
                if (_gET_TURNO == null)
                {
                    var newCollection = new FixupCollection<GET_TURNO>();
                    newCollection.CollectionChanged += FixupGET_TURNO;
                    _gET_TURNO = newCollection;
                }
                return _gET_TURNO;
            }
            set
            {
                if (!ReferenceEquals(_gET_TURNO, value))
                {
                    var previousValue = _gET_TURNO as FixupCollection<GET_TURNO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGET_TURNO;
                    }
                    _gET_TURNO = value;
                    var newValue = value as FixupCollection<GET_TURNO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGET_TURNO;
                    }
                }
            }
        }
        private ICollection<GET_TURNO> _gET_TURNO;
    
        public virtual ICollection<INF_INFODOC> INF_INFODOC
        {
            get
            {
                if (_iNF_INFODOC == null)
                {
                    var newCollection = new FixupCollection<INF_INFODOC>();
                    newCollection.CollectionChanged += FixupINF_INFODOC;
                    _iNF_INFODOC = newCollection;
                }
                return _iNF_INFODOC;
            }
            set
            {
                if (!ReferenceEquals(_iNF_INFODOC, value))
                {
                    var previousValue = _iNF_INFODOC as FixupCollection<INF_INFODOC>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupINF_INFODOC;
                    }
                    _iNF_INFODOC = value;
                    var newValue = value as FixupCollection<INF_INFODOC>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupINF_INFODOC;
                    }
                }
            }
        }
        private ICollection<INF_INFODOC> _iNF_INFODOC;
    
        public virtual ICollection<REL_DESTINATARIO> REL_DESTINATARIO
        {
            get
            {
                if (_rEL_DESTINATARIO == null)
                {
                    var newCollection = new FixupCollection<REL_DESTINATARIO>();
                    newCollection.CollectionChanged += FixupREL_DESTINATARIO;
                    _rEL_DESTINATARIO = newCollection;
                }
                return _rEL_DESTINATARIO;
            }
            set
            {
                if (!ReferenceEquals(_rEL_DESTINATARIO, value))
                {
                    var previousValue = _rEL_DESTINATARIO as FixupCollection<REL_DESTINATARIO>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupREL_DESTINATARIO;
                    }
                    _rEL_DESTINATARIO = value;
                    var newValue = value as FixupCollection<REL_DESTINATARIO>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupREL_DESTINATARIO;
                    }
                }
            }
        }
        private ICollection<REL_DESTINATARIO> _rEL_DESTINATARIO;

        #endregion
        #region Association Fixup
    
        private void FixupAPP_ROL_MENU(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (APP_ROL_MENU item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (APP_ROL_MENU item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }
    
        private void FixupAPP_USUARIO_ROL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (APP_USUARIO_ROL item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (APP_USUARIO_ROL item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }
    
        private void FixupCAT_ORGANIGRAMA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CAT_ORGANIGRAMA item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CAT_ORGANIGRAMA item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }
    
        private void FixupGET_TURNO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GET_TURNO item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GET_TURNO item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }
    
        private void FixupINF_INFODOC(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (INF_INFODOC item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (INF_INFODOC item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }
    
        private void FixupREL_DESTINATARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (REL_DESTINATARIO item in e.NewItems)
                {
                    item.APP_ROL = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REL_DESTINATARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.APP_ROL, this))
                    {
                        item.APP_ROL = null;
                    }
                }
            }
        }

        #endregion
    }
}
